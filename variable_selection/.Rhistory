setwd("~/Documents/FA/variable_selection")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("mega-2015.csv", stringsAsFactors = FALSE)
colnames(df)
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names of player for correlation
corrplot(M,method = "circle", type = "upper")
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names of player for correlation
corrplot(M,method = "circle", type = "upper")
sort(M[38,],decreasing = TRUE)
library(leaps)
library(car)
bm <- regsubsets(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm.sum <- summary(bm)
res.legend <-subsets(bm, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
bm.sum$which[10,]
which(bm.sum$which[10,] == TRUE)
m1 <- lm(average.salary ~ PS.G + DRB + DWS + STL + AST + PF + AST. + DBPM + STL. + BLK., data = df)
summary(m1)
vif(m1)
which(bm.sum$which[9,] == TRUE)
which(bm.sum$which[8,] == TRUE)
m2 <- lm(average.salary ~ PS.G + DRB + DWS + STL + AST + PF + DBPM + BLK., data = df)
summary(m2)
vif(m2)
par(mfrow=c(2,2))
plot(m2)
plot(density(df$average.salary,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
qqnorm(log(df$average.salary), ylab = "Average Salary")
qqline(log(df$average.salary), lty = 2, col = 2)
qqnorm(sqrt(df$average.salary), ylab = "Average Salary")
qqline(sqrt(df$average.salary), lty = 2, col = 2)
qqnorm(I(df$average.salary)^0.33, ylab = "Average Salary")
#qqline(I(df$average.salary)^0.33, lty = 2, col = 2)
bm2 <- regsubsets(log(average.salary) ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm2.sum <- summary(bm2)
res.legend <-subsets(bm2, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
which(bm2.sum$which[9,] == TRUE)
which(bm2.sum$which[8,] == TRUE)
which(bm2.sum$which[7,] == TRUE)
which(bm2.sum$which[6,] == TRUE)
which(bm2.sum$which[5,] == TRUE)
which(bm2.sum$which[4,] == TRUE)
n1 <- lm(log(average.salary) ~ PS.G + DBPM + STL. + BLK., data = df)
summary(n1)
vif(n1)
which(bm2.sum$which[5,] == TRUE)
n1 <- lm(log(average.salary) ~ PS.G + STL + AST + AST. + DBPM, data = df)
summary(n1)
vif(n1)
which(bm2.sum$which[4,] == TRUE)
n1 <- lm(log(average.salary) ~ PS.G + DBPM + STL. + BLK., data = df)
summary(n1)
vif(n1)
par(mfrow=c(2,2))
plot(n1)
View(df)
df <- df[-c(363,367),]
row.names(1:nrow(df))
df <- df[-c(363,367),]
df <- df[-c(363,367),]
row.names(df) <- 1:nrow(df)
df <- read.csv("mega-2015.csv", stringsAsFactors = FALSE)
df <- read.csv("mega-2015.csv", stringsAsFactors = FALSE)
df <- df[-c(363,367),]
row.names(df) <- 1:nrow(df)
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names of player for correlation
corrplot(M,method = "circle", type = "upper")
sort(M[38,],decreasing = TRUE)
library(leaps)
library(car)
bm <- regsubsets(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm.sum <- summary(bm)
res.legend <-subsets(bm, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
which(bm.sum$which[10,] == TRUE)
which(bm.sum$which[10,] == TRUE)
m1 <- lm(average.salary ~ PS.G + DRB + DWS + STL + AST + PF + AST. + DBPM + STL. + BLK., data = df)
summary(m1)
vif(m1)
which(bm.sum$which[9,] == TRUE)
which(bm.sum$which[8,] == TRUE)
m2 <- lm(average.salary ~ PS.G + DRB + DWS + STL + AST + PF + DBPM + BLK., data = df)
summary(m2)
vif(m2)
par(mfrow=c(2,2))
plot(m2)
plot(density(df$average.salary,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
qqnorm(log(df$average.salary), ylab = "Average Salary")
qqline(log(df$average.salary), lty = 2, col = 2)
bm2 <- regsubsets(log(average.salary) ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm2.sum <- summary(bm2)
res.legend <-subsets(bm2, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
qqnorm(df$average.salary, ylab = "Average Salary")
qqline(df$average.salary, lty = 2, col = 2)
which(bm2.sum$which[4,] == TRUE)
n1 <- lm(log(average.salary) ~ PS.G + DBPM + STL. + BLK., data = df)
summary(n1)
vif(n1)
which(bm2.sum$which[5,] == TRUE)
n1 <- lm(log(average.salary) ~ PS.G + AST + DBPM + STL. + BLK., data = df)
summary(n1)
vif(n1)
par(mfrow=c(2,2))
plot(n1)
library(ggplot2)
# prepare a special xlab with the number of obs for each group
my_xlab <- paste(levels(as.factor(df$Pos)))
# plot
ggplot(df, aes(x=Pos, y=average.salary, fill=Pos)) +
geom_boxplot(varwidth = TRUE, alpha=0.2) +
theme(legend.position="none") +
scale_x_discrete(labels=my_xlab)
m1.aov ~ aov(average.salary ~ as.factor(Pos), data = df)
summary(m1.aov)
m1.aov ~ aov(average.salary ~ as.factor(Pos), data = df)
summary(m1.aov)
m1.aov <- aov(average.salary ~ as.factor(Pos), data = df)
summary(m1.aov)
scaled.df <- scale(df[5:39])
colMeans(scaled.df)
apply(scaled.df,2, sd)
View(scaled.df)
std.df <- df
std.df[5:39] <- scaled.df
View(std.df)
library(corrplot)
M <- cor(std.df[-c(1,2)]) # exclude names of player for correlation
corrplot(M,method = "circle", type = "upper")
sort(M[38,],decreasing = TRUE)
bm3 <- regsubsets(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = std.df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm3.sum <- summary(bm3)
res.legend <-subsets(bm3, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
which(bm3.sum$which[5,] == TRUE)
std.m1 <- lm(average.salary ~ PS.G + DRB + STL + AST + PF, data = std.df)
summary(std.m1)
vif(std.m1)
which(bm3.sum$which[6,] == TRUE)
std.m1 <- lm(average.salary ~ PS.G + DRB + STL + AST +  AST. + STL., data = std.df)
summary(std.m1)
vif(std.m1)
which(bm3.sum$which[5,] == TRUE)
std.m1 <- lm(average.salary ~ PS.G + DRB + STL + AST +  PF, data = std.df)
summary(std.m1)
vif(std.m1)
par(mfrow=c(2,2))
plot(std.m1)
bm4 <- regsubsets(log(average.salary) ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = std.df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm4.sum <- summary(bm4)
res.legend <-subsets(bm4, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
which(bm4.sum$which[5,] == TRUE)
std.m2 <- lm(log(average.salary) ~ PS.G + AST + DBPM + STL. + BLK., data = std.df)
summary(std.m2)
vif(std.m2)
par(mfrow=c(2,2))
plot(std.m2)
par(mfrow=c(2,2))
plot(std.m2)
mint <- lm(log(average.salary)~1,data=std.df)
forwardAIC <- step(mint,scope=list(lower=~1,
upper=~FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV.),
direction="forward", data=std.df)
L.fwdAIC <- lm(log(average.salary) ~ FG + DRB + AST + STL + AST. + PF + BLK. + DBPM, data = std.df)
summary(l.fwdAIC)
L.fwdAIC <- lm(log(average.salary) ~ FG + DRB + AST + STL + AST. + PF + BLK. + DBPM, data = std.df)
summary(L.fwdAIC)
vif(L.fwdAIC)
mint <- lm(average.salary~1,data=std.df)
forwardAIC <- step(mint,scope=list(lower=~1,
upper=~FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV.),
direction="forward", data=std.df)
fwdAIC <- lm(average.salary ~ FG + TOV + STL + VORP + G + USG. + PF + DRB + BLK + AST + AST. + STL. + WS + FTA, data = std.df)
summary(fwdAIC)
vif(fwdAIC)
jumbo ~ lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = std.df)
summary(jumbo)
jumbo ~ lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV., data = std.df)
summary(jumbo)
jumbo <- lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. , data = std.df)
summary(jumbo)
vif(jumbo)
jumbo <- lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. , data = std.df)
summary(jumbo)
n = length(std.df$average.salary)
backBIC <- step(jumbo,direction="backward", data=std.df, k=log(n))
backAIC <- lm(average.salary ~ FG + DRB + DWS + STL + AST + PF + AST. + DBPM + BLK., data=std.df)
summary(backAIC)
vif(backAIC)
backBICmodel <- lm(average.salary ~ FG + DRB + DWS + STL + AST + PF + AST. + DBPM + BLK., data=std.df)
summary(backBICmodel)
vif(backBICmodel)
backAIC <- step(jumbo, direction="backward", data=std.df)
backAICmodel <- lm(average.salary ~ FG + TOV + DRB + STL + AST + PF + AST. + DBPM + STL. + BLK., data = std.df)
summary(backAICmodel)
vif(backAICmodel)
anova(backBICmodel,backAICmodel)
n = length(std.df$average.salary)
forwardBIC <- step(mint,scope=list(lower=~1,
upper=~FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV.),
direction="forward", data=std.df,k=log(n))
forwardBICmodel <- lm(average.salary ~ FG + TOV + STL + VORP + G, data = std.df)
summary(forwardBICmodel)
vif(forwardBICmodel)
anova(forwardBICmodel, fwdAIC)
anova(backBICmodel, fwdAIC)
anova(backBICmodel, fwdAIC)
write.csv('std-2015.csv',sep = ",")
write.csv(std.df, file = 'std-2015.csv')
plot(density(log(df$average.salary),bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
jumbo <- lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. , data = std.df)
summary(jumbo)
jumbo <- lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. , data = std.df)
summary(jumbo)
inverseResponsePlot(jumbo)
jumbo <- lm(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. , data = std.df)
summary(jumbo)
inverseResponsePlot(jumbo)
summary(powerTransform(jumbo))
plot(density(I(df$average.salary)^0.1,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
plot(density(log(df$average.salary),bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names of player and position for correlation
df <- read.csv("NBA-2014-2017.csv", stringsAsFactors = FALSE)
View(df)
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names of player and position for correlation
corrplot(M,method = "circle", type = "upper")
library(corrplot)
M <- cor(df[-c(1,2,42)]) # exclude names, pos, and year for correlation
corrplot(M,method = "circle", type = "upper")
df <- read.csv("NBA-2014-2017.csv", stringsAsFactors = FALSE)
df[is.na(df)] <- 0
library(corrplot)
M <- cor(df[-c(1,2)]) # exclude names, position, and year for correlation
corrplot(M,method = "circle", type = "upper")
library(corrplot)
M <- cor(df[-c(1,2,42)]) # exclude names, position, and year for correlation
corrplot(M,method = "circle", type = "upper")
sort(M[38,],decreasing = TRUE)
sort(M[39,],decreasing = TRUE)
library(leaps)
library(car)
bm <- regsubsets(average.salary ~ FG + PS.G + FGA + MP + FTA + FT + WS + VORP + TOV + OWS + DRB + GS + BPM + OBPM + DWS + USG. + TRB + STL + WS.48 + AST + PF + ORB + TS. + AST. + BLK + FG. + G + DRB. + eFG. + FTr + DBPM + TRB. + FT. + STL. + ORB. + BLK. + TOV. + factor(Year), data = df, nbest=1, nvmax=NULL, force.in=NULL, force.out=NULL,method="exhaustive")
bm.sum <- summary(bm)
res.legend <-subsets(bm, statistic="adjr2", legend = FALSE, min.size = 3, max.size = 12, main = "Adjusted R^2")
plot(density(df$average.salary,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
qqnorm(log(df$average.salary), ylab = "Average Salary")
qqline(log(df$average.salary), lty = 2, col = 2)
qqnorm(sqrt(df$average.salary), ylab = "Average Salary")
qqline(sqrt(df$average.salary), lty = 2, col = 2)
plot(density(sqrt(df$average.salary),bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary"))
plot(density(sqrt(df$average.salary),bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
plot(density(log(df$average.salary),bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
plot(density(I(df$average.salary)^0.33,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
plot(density(I(df$average.salary)^.5,bw="SJ",kern="gaussian"),type="l",main="Gaussian
kernel density estimate",xlab="Average Salary")
